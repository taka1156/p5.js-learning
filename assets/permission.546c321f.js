var r=Object.defineProperty;var o=(n,e,t)=>e in n?r(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var s=(n,e,t)=>(o(n,typeof e!="symbol"?e+"":e,t),t);const i=class{constructor(e){s(this,"deviceStatus");s(this,"btn");s(this,"deviceVersionCheck",()=>DeviceOrientationEvent&&typeof DeviceOrientationEvent.requestPermission=="function");s(this,"requestAccess",()=>{let e=!1;typeof DeviceOrientationEvent!==void 0&&typeof DeviceOrientationEvent.requestPermission=="function"&&DeviceOrientationEvent.requestPermission().then(t=>{t==="granted"&&(e=!0)}).catch(t=>console.log(t)),this.setPermission(e)});s(this,"setPermission",(e,t=this.deviceVersionCheck())=>{this.deviceStatus={isIos13:t,permission:e}});s(this,"judgeDeviceStatus",()=>{const{isIos13:e,permission:t}=this.deviceStatus;return e&&!t});s(this,"createBtn",e=>{const t=e.createButton("click");return t.style("font-size","20px"),t.center(),t.mousePressed(this.requestAccess),t});s(this,"deviceMoved",()=>{this.btn.remove(),this.setPermission(!0)});this.deviceStatus={isIos13:this.deviceVersionCheck(),permission:!1},this.btn=this.createBtn(e),this.judgeDeviceStatus()?e.deviceMoved=()=>this.deviceMoved():this.btn.remove()}};let c=i;s(c,"_instance"),s(c,"getInstance",e=>(i._instance||(i._instance=new i(e)),i._instance));export{c as D};
